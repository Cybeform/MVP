{"ast":null,"code":"// remplacer toute référence à \"/api/...\" par l’URL complète\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000';\nexport async function startRecording() {\n  const res = await fetch(`${BACKEND_URL}/start-recording`, {\n    method: 'POST'\n  });\n  if (!res.ok) throw new Error(`startRecording error ${res.status}`);\n  return res.text();\n}\nexport async function stopRecording(id) {\n  const res = await fetch(`${BACKEND_URL}/stop-recording?id=${id}`, {\n    method: 'POST'\n  });\n  if (!res.ok) throw new Error(`stopRecording error ${res.status}`);\n}\nexport async function fetchRecordings() {\n  const res = await fetch(`${BACKEND_URL}/recordings`);\n  if (!res.ok) throw new Error(`fetchRecordings error ${res.status}`);\n  return res.json();\n}\n\n// pour l’upload avec progression\nexport function uploadAudio(file, onProgress) {\n  const form = new FormData();\n  form.append(\"file\", file);\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", `${BASE}/upload`);\n    xhr.upload.onprogress = e => onProgress(Math.round(e.loaded * 100 / e.total));\n    xhr.onload = () => xhr.status === 200 ? resolve(JSON.parse(xhr.responseText).id) : reject(xhr);\n    xhr.onerror = () => reject(new Error(\"Erreur réseau\"));\n    xhr.send(form);\n  });\n}","map":{"version":3,"names":["BACKEND_URL","process","env","REACT_APP_BACKEND_URL","startRecording","res","fetch","method","ok","Error","status","text","stopRecording","id","fetchRecordings","json","uploadAudio","file","onProgress","form","FormData","append","Promise","resolve","reject","xhr","XMLHttpRequest","open","BASE","upload","onprogress","e","Math","round","loaded","total","onload","JSON","parse","responseText","onerror","send"],"sources":["/Users/nekmouche/Desktop/Projet RaHa/MVP/frontend/btp-meeting-ui/src/api.js"],"sourcesContent":["// remplacer toute référence à \"/api/...\" par l’URL complète\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000'\n\nexport async function startRecording() {\n     const res = await fetch(`${BACKEND_URL}/start-recording`, { method: 'POST' })\n     if (!res.ok) throw new Error(`startRecording error ${res.status}`)\n      return res.text()\n  }\n\n  export async function stopRecording(id) {\n      const res = await fetch(`${BACKEND_URL}/stop-recording?id=${id}`, { method: 'POST' })\n      if (!res.ok) throw new Error(`stopRecording error ${res.status}`)\n      }\n\n\n    export async function fetchRecordings() {\n           const res = await fetch(`${BACKEND_URL}/recordings`)\n           if (!res.ok) throw new Error(`fetchRecordings error ${res.status}`)\n            return res.json()\n        }\n\n        \n// pour l’upload avec progression\nexport function uploadAudio(file, onProgress) {\n  const form = new FormData()\n  form.append(\"file\", file)\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.open(\"POST\", `${BASE}/upload`)\n    xhr.upload.onprogress = e => onProgress(Math.round(e.loaded * 100 / e.total))\n    xhr.onload  = () => xhr.status === 200 ? resolve(JSON.parse(xhr.responseText).id) : reject(xhr)\n    xhr.onerror = () => reject(new Error(\"Erreur réseau\"))\n    xhr.send(form)\n  })\n}\n"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;AAEhF,OAAO,eAAeC,cAAcA,CAAA,EAAG;EAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,WAAW,kBAAkB,EAAE;IAAEO,MAAM,EAAE;EAAO,CAAC,CAAC;EAC7E,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwBJ,GAAG,CAACK,MAAM,EAAE,CAAC;EACjE,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACrB;AAEA,OAAO,eAAeC,aAAaA,CAACC,EAAE,EAAE;EACpC,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,WAAW,sBAAsBa,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAE;EAAO,CAAC,CAAC;EACrF,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,GAAG,CAACK,MAAM,EAAE,CAAC;AACjE;AAGF,OAAO,eAAeI,eAAeA,CAAA,EAAG;EACjC,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,WAAW,aAAa,CAAC;EACpD,IAAI,CAACK,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyBJ,GAAG,CAACK,MAAM,EAAE,CAAC;EAClE,OAAOL,GAAG,CAACU,IAAI,CAAC,CAAC;AACrB;;AAGR;AACA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAEC,UAAU,EAAE;EAC5C,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;EACzB,OAAO,IAAIK,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;IAChCD,GAAG,CAACE,IAAI,CAAC,MAAM,EAAE,GAAGC,IAAI,SAAS,CAAC;IAClCH,GAAG,CAACI,MAAM,CAACC,UAAU,GAAGC,CAAC,IAAIb,UAAU,CAACc,IAAI,CAACC,KAAK,CAACF,CAAC,CAACG,MAAM,GAAG,GAAG,GAAGH,CAAC,CAACI,KAAK,CAAC,CAAC;IAC7EV,GAAG,CAACW,MAAM,GAAI,MAAMX,GAAG,CAACf,MAAM,KAAK,GAAG,GAAGa,OAAO,CAACc,IAAI,CAACC,KAAK,CAACb,GAAG,CAACc,YAAY,CAAC,CAAC1B,EAAE,CAAC,GAAGW,MAAM,CAACC,GAAG,CAAC;IAC/FA,GAAG,CAACe,OAAO,GAAG,MAAMhB,MAAM,CAAC,IAAIf,KAAK,CAAC,eAAe,CAAC,CAAC;IACtDgB,GAAG,CAACgB,IAAI,CAACtB,IAAI,CAAC;EAChB,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// remplacer toute référence à \"/api/...\" par l’URL complète\nconst BASE = \"http://localhost:8000\";\nexport async function startRecording() {\n  const res = await fetch(`${BASE}/start-recording`, {\n    method: \"POST\"\n  });\n  if (!res.ok) throw new Error(`startRecording failed: ${res.status}`);\n  const data = await res.json(); // { id: \"…\" }\n  return data.id; // <-- on ne renvoie QUE data.id\n}\nexport async function stopRecording(id) {\n  const res = await fetch(`${BASE}/stop-recording?id=${encodeURIComponent(id)}`, {\n    method: \"POST\"\n  });\n  if (!res.ok) throw new Error(`stopRecording failed: ${res.status}`);\n}\nexport async function fetchRecordings() {\n  const res = await fetch(`${BASE}/recordings`);\n  if (!res.ok) throw new Error(`fetchRecordings failed: ${res.status}`);\n  return res.json();\n}\n\n// pour l’upload avec progression\nexport function uploadAudio(file, onProgress) {\n  const form = new FormData();\n  form.append(\"file\", file);\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", `${BASE}/upload`);\n    xhr.upload.onprogress = e => onProgress(Math.round(e.loaded * 100 / e.total));\n    xhr.onload = () => xhr.status === 200 ? resolve(JSON.parse(xhr.responseText).id) : reject(xhr);\n    xhr.onerror = () => reject(new Error(\"Erreur réseau\"));\n    xhr.send(form);\n  });\n}","map":{"version":3,"names":["BASE","startRecording","res","fetch","method","ok","Error","status","data","json","id","stopRecording","encodeURIComponent","fetchRecordings","uploadAudio","file","onProgress","form","FormData","append","Promise","resolve","reject","xhr","XMLHttpRequest","open","upload","onprogress","e","Math","round","loaded","total","onload","JSON","parse","responseText","onerror","send"],"sources":["/Users/nekmouche/Desktop/Projet RaHa/MVP/frontend/btp-meeting-ui/src/api.js"],"sourcesContent":["// remplacer toute référence à \"/api/...\" par l’URL complète\nconst BASE = \"http://localhost:8000\";\n\nexport async function startRecording() {\n  const res = await fetch(`${BASE}/start-recording`, { method: \"POST\" });\n  if (!res.ok) throw new Error(`startRecording failed: ${res.status}`);\n  const data = await res.json();    // { id: \"…\" }\n  return data.id;                   // <-- on ne renvoie QUE data.id\n}\n\nexport async function stopRecording(id) {\n  const res = await fetch(\n    `${BASE}/stop-recording?id=${encodeURIComponent(id)}`,\n    { method: \"POST\" }\n  );\n  if (!res.ok) throw new Error(`stopRecording failed: ${res.status}`);\n}\n\nexport async function fetchRecordings() {\n  const res = await fetch(`${BASE}/recordings`);\n  if (!res.ok) throw new Error(`fetchRecordings failed: ${res.status}`);\n  return res.json();\n}\n\n        \n// pour l’upload avec progression\nexport function uploadAudio(file, onProgress) {\n  const form = new FormData()\n  form.append(\"file\", file)\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.open(\"POST\", `${BASE}/upload`)\n    xhr.upload.onprogress = e => onProgress(Math.round(e.loaded * 100 / e.total))\n    xhr.onload  = () => xhr.status === 200 ? resolve(JSON.parse(xhr.responseText).id) : reject(xhr)\n    xhr.onerror = () => reject(new Error(\"Erreur réseau\"))\n    xhr.send(form)\n  })\n}\n"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAG,uBAAuB;AAEpC,OAAO,eAAeC,cAAcA,CAAA,EAAG;EACrC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,IAAI,kBAAkB,EAAE;IAAEI,MAAM,EAAE;EAAO,CAAC,CAAC;EACtE,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0BJ,GAAG,CAACK,MAAM,EAAE,CAAC;EACpE,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC,CAAC,CAAI;EAClC,OAAOD,IAAI,CAACE,EAAE,CAAC,CAAmB;AACpC;AAEA,OAAO,eAAeC,aAAaA,CAACD,EAAE,EAAE;EACtC,MAAMR,GAAG,GAAG,MAAMC,KAAK,CACrB,GAAGH,IAAI,sBAAsBY,kBAAkB,CAACF,EAAE,CAAC,EAAE,EACrD;IAAEN,MAAM,EAAE;EAAO,CACnB,CAAC;EACD,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyBJ,GAAG,CAACK,MAAM,EAAE,CAAC;AACrE;AAEA,OAAO,eAAeM,eAAeA,CAAA,EAAG;EACtC,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,IAAI,aAAa,CAAC;EAC7C,IAAI,CAACE,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2BJ,GAAG,CAACK,MAAM,EAAE,CAAC;EACrE,OAAOL,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;;AAGA;AACA,OAAO,SAASK,WAAWA,CAACC,IAAI,EAAEC,UAAU,EAAE;EAC5C,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;EACzB,OAAO,IAAIK,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;IAChCD,GAAG,CAACE,IAAI,CAAC,MAAM,EAAE,GAAGzB,IAAI,SAAS,CAAC;IAClCuB,GAAG,CAACG,MAAM,CAACC,UAAU,GAAGC,CAAC,IAAIZ,UAAU,CAACa,IAAI,CAACC,KAAK,CAACF,CAAC,CAACG,MAAM,GAAG,GAAG,GAAGH,CAAC,CAACI,KAAK,CAAC,CAAC;IAC7ET,GAAG,CAACU,MAAM,GAAI,MAAMV,GAAG,CAAChB,MAAM,KAAK,GAAG,GAAGc,OAAO,CAACa,IAAI,CAACC,KAAK,CAACZ,GAAG,CAACa,YAAY,CAAC,CAAC1B,EAAE,CAAC,GAAGY,MAAM,CAACC,GAAG,CAAC;IAC/FA,GAAG,CAACc,OAAO,GAAG,MAAMf,MAAM,CAAC,IAAIhB,KAAK,CAAC,eAAe,CAAC,CAAC;IACtDiB,GAAG,CAACe,IAAI,CAACrB,IAAI,CAAC;EAChB,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}